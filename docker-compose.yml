version: '3.7'

networks:
  app-network:
    ipam:
      config:
        - subnet: "${NETWORK_ID}.0/24"

services:
  php:
    build:
      context: ./docker/php
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        CLIENT_HOST: "${NETWORK_ID}.1"
    image: otus-project/php
    volumes:
      - ./app:/var/www/html
      - ./docker/sock:/sock
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.2"

  composer:
    build:
      context: ./docker/composer
    image: otus-project/composer
    volumes:
      - ./app:/var/www/html

  nginx:
    build:
      context: ./docker/nginx
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        CLIENT_HOST: $CLIENT_HOST
    image: otus-project/nginx
    ports:
      - ${NGINX_80_PORT}:80
      - ${NGINX_443_PORT}:443
    volumes:
      - ./app:/var/www/html
      - ./docker/sock:/sock
      - ./logs/nginx:/var/log/nginx
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.3"
    depends_on:
      - php
    links:
      - php

  rabbitmq:
    image: rabbitmq:3.7.5-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.4"

  redis:
    image: redis:6.2-rc2
    expose:
      - 6379
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.6"

  filebeat:
    build:
      context: ./docker/filebeat
    command: filebeat -e -strict.perms=false
    volumes:
      - ./logs/nginx:/usr/share/filebeat/logs/nginx
      - ./app/log:/usr/share/filebeat/logs/app
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.17"

  logstash:
    build:
      context: ./docker/logstash
    volumes:
      - ./docker/logstash/pipelines:/usr/share/logstash/config/pipelines:ro
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.7"
    depends_on:
      - filebeat
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.8"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://192.168.15.8:9200
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.9"