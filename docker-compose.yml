version: '3.7'

networks:
  app-network:
    ipam:
      config:
        - subnet: "${NETWORK_ID}.0/24"

services:
  php:
    build:
      context: ./docker/php
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        CLIENT_HOST: "${NETWORK_ID}.1"
    image: otus-project/php
    volumes:
      - ./app:/var/www/html
      - ./docker/sock:/sock
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.2"

  composer:
    build:
      context: ./docker/composer
    image: otus-project/composer
    volumes:
      - ./app:/var/www/html

  nginx:
    build:
      context: ./docker/nginx
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
#        CLIENT_HOST: $CLIENT_HOST
    image: otus-project/nginx
    ports:
      - ${NGINX_80_PORT}:80
      - ${NGINX_443_PORT}:443
    volumes:
      - ./app:/var/www/html
      - ./docker/sock:/sock
      - ./logs/nginx:/var/log/nginx
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.3"
    depends_on:
      - php
    links:
      - php

  rabbitmq:
    image: rabbitmq:3.7.5-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_PORT1}:15672
      - ${RABBITMQ_PORT2}:5672
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.4"

  postgres:
    build:
      context: ./docker/postgres
    image: otus-project/postgres
#    ports:
#      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql
      - ./logs/postgres:/var/log/postgresql
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.5"

  redis:
    image: redis:6.2-rc2
    expose:
      - 6379
    #    ports:
    #      - ${REDIS_PORT}:6379
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.6"

  filebeat:
    build:
      context: ./docker/filebeat
    command: filebeat -e -strict.perms=false
    volumes:
      - ./logs/nginx:/usr/share/filebeat/logs/nginx
      - ./app/log:/usr/share/filebeat/logs/app
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.17"

  logstash:
    build:
      context: ./docker/logstash
      args:
        - ELK_VERSION=${ELK_VERSION}
    volumes:
      - ./docker/logstash/pipelines:/usr/share/logstash/config/pipelines:ro
      - ./docker/logstash/patterns:/usr/share/logstash/patterns
    ports:
      - ${LOGSTASH_PORT}:5001
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.7"
    depends_on:
      - filebeat
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    environment:
      - discovery.type=single-node
    ports:
      - ${ELASTICSEARCH_PORT1}:9200
      - ${ELASTICSEARCH_PORT2}:9300
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.8"

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      ELASTICSEARCH_URL: http://192.168.15.8:9200
    networks:
      app-network:
        ipv4_address: "${NETWORK_ID}.9"